# Example configuration with adaptive concurreny limit
static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8080
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_http

          # Structured access log in JSON format
          access_log:
          - name: envoy.access_loggers.stderr
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StderrAccessLog
              log_format:
                json_format:
                  type: "request"
                  protocol: "%PROTOCOL%"
                  method: "%REQ(:METHOD)%"
                  path: "%REQ(:path)%"
                  responseCode: "%RESPONSE_CODE%"
                  duration: "%DURATION%"
                  CONNECTION_TERMINATION_DETAILS: "%CONNECTION_TERMINATION_DETAILS%"
                  UPSTREAM_CLUSTER: "%UPSTREAM_CLUSTER%"
                  UPSTREAM_HOST: "%UPSTREAM_HOST%"
                  UPSTREAM_LOCAL_ADDRESS: "%UPSTREAM_LOCAL_ADDRESS%"
                  UPSTREAM_TRANSPORT_FAILURE_REASON: "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
                omit_empty_values: True


          # On errors send application/problem+json objects
          local_reply_config:
            mappers:
              - filter:
                  status_code_filter:
                    comparison:
                      op: EQ
                      value:
                        default_value: 429
                        runtime_key: key_b
                body_format_override:
                  json_format:
                    status: "%RESPONSE_CODE%"
                    title: "Too many requests"
                    detail: "%LOCAL_REPLY_BODY%"
                    type: "about:blank"
                  content_type: "application/problem+json"
              - filter:
                  status_code_filter:
                    comparison:
                      op: GE
                      value:
                        default_value: 400
                        runtime_key: key_b
                body_format_override:
                  json_format:
                    status: "%RESPONSE_CODE%"
                    title: "Error %RESPONSE_CODE%"
                    detail: "%LOCAL_REPLY_BODY%"
                    type: "about:blank"
                  content_type: "application/problem+json"

          route_config:
            name: local_route
            virtual_hosts:
              - name: local_service
                domains:
                  - "*"

                # Actions for rate limits
                rate_limits:
                - actions:
                  - request_headers:
                      header_name: x-envoy-downstream-service-cluster
                      descriptor_key: client_cluster
                  - request_headers:
                      header_name: ":path"
                      descriptor_key: path

                routes:
                  - match:
                      prefix: "/health"
                    route:
                      cluster: api_cluster
                  - match:
                      prefix: "/"
                    route:
                      cluster: api_cluster

          http_filters:
            # Separate treatment of health-check requests
            # https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/http/health_check/v3/health_check.proto.html
            - name: envoy.filters.http.health_check
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
                pass_through_mode: true
                cache_time: 0s  # Set >0 if only status code is needed, response body is not cached.
                headers: # https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route_components.proto#envoy-v3-api-msg-config-route-v3-headermatcher
                  - name: ":path"
                    exact_match: "/health"



            # Adaptive concurrency rate-limiting
            # https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/http/adaptive_concurrency/v3/adaptive_concurrency.proto#envoy-v3-api-msg-extensions-filters-http-adaptive-concurrency-v3-adaptiveconcurrency
            - name: envoy.filters.http.adaptive_concurrency
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.adaptive_concurrency.v3.AdaptiveConcurrency
                gradient_controller_config:
                  sample_aggregate_percentile:
                    value: 50
                  concurrency_limit_params:
                    concurrency_update_interval: 0.1s
                    max_concurrency_limit: 100
                  min_rtt_calc_params:
                    jitter:
                      value: 1
                    buffer:
                      value: 1
                    interval: 30s
                    request_count: 10
                    min_concurrency: 3
                enabled:
                  default_value: true
                  runtime_key: "adaptive_concurrency.enabled"

            - name: envoy.filters.http.router
              typed_config: { }


  clusters:
  - name: api_cluster
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    health_checks:
      always_log_health_check_failures: true
      timeout: 0.1s
      interval: 3s
      unhealthy_threshold: 3
      healthy_threshold: 1
      http_health_check:
        path: /health
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: api_cluster
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: api
                port_value: 9000

admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8081
