# Good intro: https://youtu.be/D0cuv1AEftE
# Guide to envoy's backpressure: https://blog.turbinelabs.io/a-guide-to-envoys-backpressure-22eec025ef04
static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 8800
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_http
          #############################
          # Optional: Access log
          access_log:
          - name: envoy.access_loggers.stderr
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StderrAccessLog
              log_format:
                json_format:
                  protocol: "%PROTOCOL%"
                  method: "%REQ(:METHOD)%"
                  responseCode: "%RESPONSE_CODE%"
                  duration: "%DURATION%"
                  CONNECTION_TERMINATION_DETAILS: "%CONNECTION_TERMINATION_DETAILS%"
                  UPSTREAM_CLUSTER: "%UPSTREAM_CLUSTER%"
                  UPSTREAM_HOST: "%UPSTREAM_HOST%"
                  UPSTREAM_LOCAL_ADDRESS: "%UPSTREAM_LOCAL_ADDRESS%"
                  UPSTREAM_TRANSPORT_FAILURE_REASON: "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
                omit_empty_values: True
          #############################
          # Override response content
          # Use standard problem object https://tools.ietf.org/html/rfc7807
          local_reply_config:
            mappers:
              - filter:
                  status_code_filter:
                    comparison:
                      op: EQ
                      value:
                        default_value: 429
                        runtime_key: key_b
                body_format_override:
                  json_format:
                    status: "%RESPONSE_CODE%"
                    title: "Too many requests"
                    detail: "%LOCAL_REPLY_BODY%"
                    type: "about:blank"
                  content_type: "application/problem+json"
              - filter:
                  status_code_filter:
                    comparison:
                      op: GE
                      value:
                        default_value: 400
                        runtime_key: key_b
                body_format_override:
                  json_format:
                    status: "%RESPONSE_CODE%"
                    title: "Error"
                    detail: "%LOCAL_REPLY_BODY%"
                    type: "about:blank"
                  content_type: "application/problem+json"
          #############################
          route_config:
            name: local_route
            virtual_hosts:
              - name: local_service
                domains:
                  - "*"
                # Actions for rate limits
                rate_limits:
                - actions: # any actions in here
                  - request_headers:
                      header_name: x-envoy-downstream-service-cluster
                      descriptor_key: client_cluster
                  - request_headers:
                      header_name: ":path"
                      descriptor_key: path
                ################################
                routes:
                  - match:
                      prefix: "/health"
                    route:
                      cluster: api_backend
                  - match:
                      prefix: "/"
                    route:
                      cluster: api_backend
                    # Optional: Local rate limiting ###
                    # See similar here https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/local_rate_limit_filter#config-http-filters-local-rate-limit-descriptors
                    typed_per_filter_config:
                      envoy.filters.http.local_ratelimit:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
                        stat_prefix: http_local_rate_limiter
                        token_bucket:
                          max_tokens: 2
                          tokens_per_fill: 2
                          fill_interval: 1s
                        filter_enabled:
    #                      runtime_key: local_rate_limit_enabled
                          default_value:
                            numerator: 100
                            denominator: HUNDRED
                        filter_enforced:
    #                      runtime_key: local_rate_limit_enforced
                          default_value:
                            numerator: 100
                            denominator: HUNDRED
                        response_headers_to_add:
                          - append: false
                            header:
                              key: x-local-rate-limit
                              value: 'true'
                    #############################
          # Don't forget: No error message but also no functionality if missing
          http_filters:
            # Enable local rate limiting filter as defined on the routes
            # https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/local_rate_limit_filter#config-http-filters-local-rate-limit
            - name: envoy.filters.http.local_ratelimit
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
                stat_prefix: http_local_rate_limiter
            #############################
            - name: envoy.filters.http.router
              typed_config: { }
  clusters:
  - name: api_backend
    connect_timeout: 0.25s
    # https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/cluster.proto#enum-cluster-discoverytype
#    type: STRICT_DNS
    type: LOGICAL_DNS
    health_checks:
      always_log_health_check_failures: true
      timeout: 0.1s
      interval: 3s
      unhealthy_threshold: 3
      healthy_threshold: 1
      http_health_check:
        path: /health
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: api_backend
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: api
                port_value: 8080
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8081